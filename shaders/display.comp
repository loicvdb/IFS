#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0, r32ui) uniform uimage2D depthImage;
layout(binding = 1, rgba8) uniform image2D colorImage;
layout(binding = 2) uniform FrameData
{
    mat4 matrices[3];
    mat4 view;
    vec4 color0;
    vec4 color1;
    float fov;
    float focalPlane;
    float aperture;
    float exposure;
    uint iterationCount;
} frameData;

vec3 tonemap(vec3 c)
{
    return (c * (2.51 * c + 0.03)) / (c * (2.43 * c + 0.59) + 0.14);
}

#define COLOR_PRECISION 0.002

void main()
{
    uint u = imageLoad(depthImage, ivec2(gl_GlobalInvocationID.xy)).x;
    vec2 c = COLOR_PRECISION * vec2(u >> 16, u & 0xFFFFu);
    
    vec3 l = c.x * frameData.color0.xyz + c.y * frameData.color1.xyz;
    
    imageStore(colorImage, ivec2(gl_GlobalInvocationID.xy), vec4(tonemap(l), 0.0));
}
