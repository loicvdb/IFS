#version 450

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform uimage2D depth;
layout(set = 0, binding = 1, rgba8) uniform image2D color;

void main()
{
    vec2 p = vec2(0.0);
    float s = 1.0;
    
    uint idx = gl_GlobalInvocationID.x;
    for (uint i = 0u; i < 19u; i++)
    {
        uint m = idx %3u;
        idx = idx / 3u;
        
        vec2 o = m == 0 ? vec2(0.0, 0.5) : m == 1 ? vec2(-0.5, -0.5) : vec2(0.5, -0.5);
        
        #if 0
        // trashes performance for some reason
        p = o + 0.5 * p;
        #else
        p += s * o;
        s *= 0.5;
        #endif
    }

    ivec2 pix = ivec2((p * 0.5 + 0.5) * vec2(imageSize(depth)));
    
    imageAtomicMin(depth, pix, gl_GlobalInvocationID.x);
}
